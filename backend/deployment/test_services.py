#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ Docker Compose
"""
import requests
import time
import sys

def test_service(name, url, expected_status=200):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == expected_status:
            print(f"‚úÖ {name}: OK (status {response.status_code})")
            return True
        else:
            print(f"‚ùå {name}: ERROR (status {response.status_code})")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå {name}: ERROR ({e})")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ Docker Compose...")
    print("=" * 50)
    
    services = [
        ("Grafana", "http://localhost:3000"),
        ("Prometheus", "http://localhost:9090"),
        ("Backend API", "http://localhost:8000"),
        ("Backend Health", "http://localhost:8000/health"),
        ("Backend Docs", "http://localhost:8000/docs"),
    ]
    
    results = []
    
    for name, url in services:
        result = test_service(name, url)
        results.append(result)
        time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    print("=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {sum(results)}/{len(results)} —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if all(results):
        print("üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        sys.exit(0)
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        sys.exit(1)

if __name__ == "__main__":
    main() 