#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTTPS –≤ development –æ–∫—Ä—É–∂–µ–Ω–∏–∏
"""
import uvicorn
import logging
from app.ssl_config import create_self_signed_cert, get_ssl_context

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è development
        cert_file, key_file = create_self_signed_cert()
        
        # –°–æ–∑–¥–∞–µ–º SSL –∫–æ–Ω—Ç–µ–∫—Å—Ç
        ssl_context = get_ssl_context(cert_file, key_file)
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å HTTPS...")
        logger.info("üìç HTTPS: https://localhost:8443")
        logger.info("üìç HTTP: http://localhost:8000 (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS)")
        logger.info("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://localhost:8443/docs")
        logger.info("‚ö†Ô∏è  –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç - –±—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å HTTPS
        uvicorn.run(
            "app.main:app",
            host="0.0.0.0",
            port=8443,
            ssl_keyfile=key_file,
            ssl_certfile=cert_file,
            reload=True,
            reload_dirs=["app"],
            log_level="info"
        )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ HTTPS —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        logger.info("üí° Fallback: –∑–∞–ø—É—Å–∫ –æ–±—ã—á–Ω–æ–≥–æ HTTP —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # Fallback –Ω–∞ HTTP
        uvicorn.run(
            "app.main:app",
            host="0.0.0.0",
            port=8000,
            reload=True,
            reload_dirs=["app"],
            log_level="info"
        )

if __name__ == "__main__":
    main() 