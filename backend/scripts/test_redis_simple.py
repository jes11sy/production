#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis (—Ç–æ–ª—å–∫–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π)
"""
import redis
import sys

def test_redis_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —á–µ—Ä–µ–∑ WSL (localhost:6379)
        r = redis.Redis(host='localhost', port=6379, db=0, decode_responses=True)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        response = r.ping()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis: {response}")
        
        # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –∏ —á—Ç–µ–Ω–∏—è
        r.set('test_key', 'test_value')
        value = r.get('test_key')
        print(f"‚úÖ –ó–∞–ø–∏—Å—å/—á—Ç–µ–Ω–∏–µ: {value}")
        
        # –¢–µ—Å—Ç —Å TTL
        r.set('test_ttl', 'value_with_ttl', ex=10)
        ttl = r.ttl('test_ttl')
        print(f"‚úÖ TTL —Ç–µ—Å—Ç: {ttl} —Å–µ–∫—É–Ω–¥")
        
        # –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞
        r.lpush('test_list', 'item1', 'item2', 'item3')
        list_items = r.lrange('test_list', 0, -1)
        print(f"‚úÖ –°–ø–∏—Å–æ–∫: {list_items}")
        
        # –û—á–∏—Å—Ç–∫–∞
        r.delete('test_key', 'test_ttl', 'test_list')
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_redis_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Redis"""
    try:
        r = redis.Redis(host='localhost', port=6379, db=0)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ CONFIG GET
        try:
            config = r.config_get('*')
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Redis –ø–æ–ª—É—á–µ–Ω–∞")
        except (redis.ResponseError, redis.AuthenticationError) as e:
            print(f"‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e})")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–ª—é—á–µ–π
        db_size = r.dbsize()
        print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –≤ –ë–î: {db_size}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    connection_result = test_redis_connection()
    print()
    
    # –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    info_result = test_redis_info()
    print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if connection_result and info_result:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! Redis –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redis.")
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code) 