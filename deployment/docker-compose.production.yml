services:
  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: deployment/Dockerfile
    container_name: leadschem_backend
    ports:
      - "8000:8000"
    environment:
      # База данных (используем переменные окружения)
      DATABASE_URL: ${DATABASE_URL}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_USER: ${POSTGRESQL_USER}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DBNAME: ${POSTGRESQL_DBNAME}
      POSTGRESQL_PORT: ${POSTGRESQL_PORT:-5432}
      
      # Redis (локальный)
      REDIS_URL: redis://:Fuck2015@@redis:6379/0
      
      # Безопасность (используем переменные окружения)
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DEBUG: ${DEBUG:-false}
      ENVIRONMENT: production
      
      # CORS для production (используем переменные окружения)
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      CORS_ORIGINS: ${CORS_ORIGINS}
      
      # Настройки приложения
      MEDIA_ROOT: /app/media/
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-104857600}
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES}
      UPLOAD_DIR: ${UPLOAD_DIR:-media}
      MAX_FILES_PER_USER: ${MAX_FILES_PER_USER:-100}
      
      # Безопасность
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      RATE_LIMIT_PER_MINUTE: ${RATE_LIMIT_PER_MINUTE:-100}
      LOGIN_ATTEMPTS_PER_HOUR: ${LOGIN_ATTEMPTS_PER_HOUR:-5}
      
      # Email настройки (используем переменные окружения)
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-true}
      
      # Мониторинг
      PROMETHEUS_ENABLED: true
      METRICS_ENABLED: true
      
    volumes:
      - ../media:/app/media
      - ../logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - leadschem_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.production
      args:
        API_URL: /api/v1
    container_name: leadschem_frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
    volumes:
      - frontend_dist:/app/dist
    restart: unless-stopped
    networks:
      - leadschem_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    container_name: leadschem_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - leadschem_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "Fuck2015@", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --requirepass Fuck2015@ --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: leadschem_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - leadschem_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: leadschem_grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SECURITY_ADMIN_USER: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_SERVER_ROOT_URL: https://lead-schem.ru/monitoring/
      GF_SERVER_SERVE_FROM_SUB_PATH: true
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana_dashboards:/etc/grafana/provisioning/dashboards:ro
    restart: unless-stopped
    networks:
      - leadschem_network
    depends_on:
      - prometheus

  # Nginx Proxy Manager (альтернатива прямой конфигурации Nginx)
  nginx-proxy:
    image: nginx:alpine
    container_name: leadschem_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/lead-schem.ru.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/html:/var/www/html:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - leadschem_network
    depends_on:
      - frontend
      - backend

networks:
  leadschem_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  frontend_dist:
    driver: local
  nginx_logs:
    driver: local 