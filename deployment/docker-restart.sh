#!/bin/bash

# Docker Restart Script –¥–ª—è LeadSchem CRM
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∂–µ—Å—Ç–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞

set -e

COMPOSE_FILE="docker-compose.production.yml"
PROJECT_NAME="leadschem"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
check_directory() {
    if [ ! -f "$COMPOSE_FILE" ]; then
        error "–§–∞–π–ª $COMPOSE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ deployment/"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
cleanup_project() {
    log "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
    docker-compose -f $COMPOSE_FILE down --remove-orphans || true
    
    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞
    docker images | grep $PROJECT_NAME | awk '{print $3}' | xargs -r docker rmi -f || true
    
    # –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫—ç—à
    docker system prune -f || true
    docker builder prune -f || true
    
    log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
cleanup_service() {
    local service=$1
    log "üßπ –û—á–∏—Å—Ç–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: $service"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å
    docker-compose -f $COMPOSE_FILE stop $service || true
    docker-compose -f $COMPOSE_FILE rm -f $service || true
    
    # –£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑ —Å–µ—Ä–≤–∏—Å–∞
    local image_name="${PROJECT_NAME}_${service}"
    docker images | grep $image_name | awk '{print $3}' | xargs -r docker rmi -f || true
    
    log "‚úÖ –û—á–∏—Å—Ç–∫–∞ $service –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# 1. –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞
restart_full() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ü–û–õ–ù–´–ô –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    cleanup_project
    
    log "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f $COMPOSE_FILE build --no-cache --force-rm
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f $COMPOSE_FILE up -d
    
    log "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f $COMPOSE_FILE ps
    
    log "üéâ –ü–û–õ–ù–´–ô –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 2. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
restart_frontend() {
    log "üé® –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –§–†–û–ù–¢–ï–ù–î–ê..."
    
    cleanup_service "frontend"
    
    log "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend –æ–±—Ä–∞–∑–∞..."
    docker-compose -f $COMPOSE_FILE build frontend --no-cache --force-rm
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ frontend..."
    docker-compose -f $COMPOSE_FILE up -d frontend
    
    log "üìä –°—Ç–∞—Ç—É—Å frontend:"
    docker-compose -f $COMPOSE_FILE ps frontend
    
    log "üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ frontend –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞
restart_backend() {
    log "‚öôÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ë–≠–ö–ï–ù–î–ê..."
    
    cleanup_service "backend"
    
    log "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ backend –æ–±—Ä–∞–∑–∞..."
    docker-compose -f $COMPOSE_FILE build backend --no-cache --force-rm
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ backend..."
    docker-compose -f $COMPOSE_FILE up -d backend
    
    log "üìä –°—Ç–∞—Ç—É—Å backend:"
    docker-compose -f $COMPOSE_FILE ps backend
    
    log "üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx
restart_nginx() {
    log "üåê –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ NGINX..."
    
    cleanup_service "nginx-proxy"
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ nginx..."
    docker-compose -f $COMPOSE_FILE up -d nginx-proxy
    
    log "üìä –°—Ç–∞—Ç—É—Å nginx:"
    docker-compose -f $COMPOSE_FILE ps nginx-proxy
    
    log "üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 5. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Redis
restart_redis() {
    log "üì¶ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ REDIS..."
    
    cleanup_service "redis"
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ redis..."
    docker-compose -f $COMPOSE_FILE up -d redis
    
    log "üìä –°—Ç–∞—Ç—É—Å redis:"
    docker-compose -f $COMPOSE_FILE ps redis
    
    log "üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ redis –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 6. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (Grafana + Prometheus)
restart_monitoring() {
    log "üìà –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê..."
    
    cleanup_service "grafana"
    cleanup_service "prometheus"
    
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    docker-compose -f $COMPOSE_FILE up -d grafana prometheus
    
    log "üìä –°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    docker-compose -f $COMPOSE_FILE ps grafana prometheus
    
    log "üéâ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# 7. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
show_logs() {
    local service=${1:-""}
    if [ -n "$service" ]; then
        log "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $service:"
        docker-compose -f $COMPOSE_FILE logs $service --tail=20
    else
        log "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
        docker-compose -f $COMPOSE_FILE logs --tail=10
    fi
}

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
status() {
    log "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f $COMPOSE_FILE ps
    
    log "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Docker:"
    docker system df
}

# 9. –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)
quick_restart() {
    local service=${1:-""}
    if [ -n "$service" ]; then
        log "‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ $service..."
        docker-compose -f $COMPOSE_FILE restart $service
        docker-compose -f $COMPOSE_FILE ps $service
    else
        log "‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose -f $COMPOSE_FILE restart
        docker-compose -f $COMPOSE_FILE ps
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}üöÄ Docker Restart Script –¥–ª—è LeadSchem CRM${NC}"
    echo ""
    echo -e "${YELLOW}–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:${NC}"
    echo "  $0 <–∫–æ–º–∞–Ω–¥–∞> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
    echo ""
    echo -e "${YELLOW}–ö–û–ú–ê–ù–î–´:${NC}"
    echo -e "  ${GREEN}full${NC}           - –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (—É–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ + –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞)"
    echo -e "  ${GREEN}frontend${NC}       - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
    echo -e "  ${GREEN}backend${NC}        - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥–∞"
    echo -e "  ${GREEN}nginx${NC}          - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ nginx"
    echo -e "  ${GREEN}redis${NC}          - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ redis"
    echo -e "  ${GREEN}monitoring${NC}     - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Grafana + Prometheus"
    echo -e "  ${GREEN}logs [service]${NC} - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ—Ö –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)"
    echo -e "  ${GREEN}status${NC}         - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo -e "  ${GREEN}quick [service]${NC}- –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏"
    echo -e "  ${GREEN}help${NC}           - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo -e "${YELLOW}–ü–†–ò–ú–ï–†–´:${NC}"
    echo "  $0 full                    # –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "  $0 frontend               # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
    echo "  $0 logs backend           # –õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞"
    echo "  $0 quick nginx            # –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_directory
    
    case "${1:-help}" in
        "full")
            restart_full
            ;;
        "frontend")
            restart_frontend
            ;;
        "backend")
            restart_backend
            ;;
        "nginx")
            restart_nginx
            ;;
        "redis")
            restart_redis
            ;;
        "monitoring")
            restart_monitoring
            ;;
        "logs")
            show_logs "$2"
            ;;
        "status")
            status
            ;;
        "quick")
            quick_restart "$2"
            ;;
        "help"|"--help"|"-h")
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 