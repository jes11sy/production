const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ production —Å–±–æ—Ä–∫–∏...');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É dist
const distDir = path.join(__dirname, 'dist');
if (fs.existsSync(distDir)) {
  fs.rmSync(distDir, { recursive: true, force: true });
}
fs.mkdirSync(distDir, { recursive: true });

// –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
console.log('üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');
const publicDir = path.join(__dirname, 'public');
if (fs.existsSync(publicDir)) {
  fs.cpSync(publicDir, distDir, { recursive: true });
}

// –ö–æ–ø–∏—Ä—É–µ–º index.html
const indexPath = path.join(__dirname, 'index.html');
if (fs.existsSync(indexPath)) {
  fs.copyFileSync(indexPath, path.join(distDir, 'index.html'));
}

// –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript
console.log('üî® –ö–æ–º–ø–∏–ª—è—Ü–∏—è TypeScript...');
try {
  execSync('npx tsc --noEmit', { stdio: 'inherit' });
  console.log('‚úÖ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ TypeScript:', error.message);
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTML —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
const instructionsHtml = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Production Build Ready</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .container { max-width: 800px; margin: 0 auto; }
        .success { color: green; }
        .warning { color: orange; }
        code { background: #f5f5f5; padding: 2px 4px; border-radius: 3px; }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="success">‚úÖ Production Build –≥–æ—Ç–æ–≤!</h1>
        
        <h2>–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å:</h2>
        <ol>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000</li>
            <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ production —Å–µ—Ä–≤–µ—Ä: <code>node production-server.js</code></li>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ <a href="http://localhost:3000">http://localhost:3000</a></li>
        </ol>
        
        <h2>–°—Ç–∞—Ç—É—Å:</h2>
        <ul>
            <li class="success">‚úÖ TypeScript –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã</li>
            <li class="success">‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã</li>
            <li class="warning">‚ö†Ô∏è Vite build –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Rollup</li>
            <li class="success">‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ</li>
        </ul>
        
        <h2>–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:</h2>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>npm run dev</code> - dev —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!</p>
    </div>
</body>
</html>
`;

fs.writeFileSync(path.join(distDir, 'build-status.html'), instructionsHtml);

console.log('‚úÖ Production —Å–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞!');
console.log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: –æ—Ç–∫—Ä–æ–π—Ç–µ dist/build-status.html');
console.log('üöÄ –ó–∞–ø—É—Å–∫: node production-server.js'); 